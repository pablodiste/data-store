package dev.pablodiste.datastore.exceptions

/**
 * Represents an error happening when fetching data with a Fetcher
 */
sealed class FetcherError(val exception: Exception) {
    /**
     * Server error.
     */
    class HttpError(exception: Exception, val code: Int, val message: String) : FetcherError(exception)

    /**
     * Server error, but returning parsed information about it.
     */
    class EntityHttpError<E: Any>(exception: Exception, val code: Int, val message: String, val errorResult: E?) : FetcherError(exception)

    /**
     * Network related error.
     */
    class IOError(exception: Exception) : FetcherError(exception)

    /**
     * Error generated by the fetcher itself, from client side. For example, validations, incomplete data required to fetch, etc.
     */
    class ClientError(exception: Exception): FetcherError(exception)

    /**
     * The error cause is unknown.
     */
    class UnknownError(exception: Exception): FetcherError(exception)
}
